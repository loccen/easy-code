# 易码网 (Easy Code) 项目开发指导

## 项目概述
易码网是一个综合性源代码交易平台，提供双轨上架系统、一键部署、灵活支付适配器、积分系统等功能。

## 技术架构
- **前端**: Next.js 14 + TypeScript + Tailwind CSS
- **后端**: Supabase (PostgreSQL + Auth + Storage + Edge Functions)
- **部署**: Docker + Kubernetes
- **支付**: 多适配器支持 (支付宝、微信、Stripe等)
- **AI服务**: 本地工具集成

## 开发原则

### 1. 架构简化原则
- 初期将大部分服务集成到主应用中
- 仅分离部署编排器服务
- 延迟支付服务集成
- AI容器化手动处理

### 2. 数据库管理
- 使用 Supabase API 直接操作配置
- 先操作 → 调试 → 更新脚本
- 包含所有 RLS 策略修复
- 更新数据库设置脚本以简化未来部署

### 3. 开发流程
- **需求分析** → **架构设计** → **原型设计** → **编码实现**
- 所有文档统一放在 `docs/` 目录下，按类型分子目录
- 频繁使用 Playwright 进行应用测试
- 测试通过后才能进入下一个开发任务

### 4. 测试策略
- 每次编码后立即测试
- 使用 Playwright 进行端到端测试
- 确保所有功能符合预期
- 测试未通过不允许进入下一任务

### 5. 代码质量
- 使用包管理器而非手动编辑配置文件
- 保持代码简洁和可维护性
- 编写单元测试和集成测试
- 提交代码前，必须运行build和lint命令，解决所有编译错误和告警
- 择机进行 Git 提交，避免积累过多改动，请务必记住，当前的改动未完成测试前，不允许提交。

## 目录结构
```
easy-code/
├── docs/                    # 项目文档
│   ├── requirements/        # 需求分析
│   ├── architecture/        # 架构设计
│   ├── prototypes/          # 原型设计
│   └── deployment/          # 部署文档
├── src/                     # 源代码
├── tests/                   # 测试文件
├── scripts/                 # 脚本文件
└── deployment/              # 部署配置
```

## Git 提交规范
- feat: 新功能
- fix: 修复bug
- docs: 文档更新
- style: 代码格式调整
- refactor: 代码重构
- test: 测试相关
- chore: 构建过程或辅助工具的变动

## Supabase 操作流程
1. 使用 Supabase API 直接操作
2. 进行调试和测试
3. 记录操作步骤
4. 更新对应脚本

## 部署策略
- Docker 容器化
- Kubernetes 编排
- 一键部署支持
- 环境配置管理

## 注意事项
- 所有回复使用中文
- 遇到反复失败的命令时停下来让用户手动执行
- 善用可用工具
- 保持频繁的 Git 提交
- 项目未初始化时先进行仓库初始化